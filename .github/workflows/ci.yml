name: CI

on:
  workflow_dispatch:
  push:
    branches:
      - staging
      - trying
  pull_request:
    branches: [ main ]

jobs:
  cancel_previous_runs:
    name: Cancel Previous Runs
    runs-on: ubuntu-latest
    steps:
      - uses: styfle/cancel-workflow-action@0.9.1
        with:
          access_token: ${{ secrets.GITHUB_TOKEN }}
  check_fmt:
    name: Check fmt and clippy
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]
        node: [ '16' ]
    steps:
      - uses: actions/checkout@v2
      - name: Install Rust stable
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
          components: clippy
          target: wasm32-unknown-unknown

      - name: Cargo check on wasm
        run: cargo check --all-targets --target wasm32-unknown-unknown

      - name: Cargo fmt
        run: cargo fmt -- --check

      - name: Cargo clippy
        run: cargo clippy -- -D warnings

      - name: Cargo check on websocket proxy
        run: make check-fluvio-websocket-proxy

  check_yarn:
    name: Check yarn install and build
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]
        node: [ '17' ]
    steps:
      - uses: actions/checkout@v2
      - name: Install Rust stable
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
          target: wasm32-unknown-unknown
      - uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node }}
      - name: install yarn packages
        run: yarn install
      - name: try to pack package
        run: yarn pack

  smoke_test:
    name: Run tests against fluvio cluster
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]
        node: [ '16' ]
    steps:
      - uses: AbsaOSS/k3d-action@v2
        name: "Create fluvio k3d Cluster"
        with:
          cluster-name: "fluvio"
      - name: Sleep 20 to ensure k3d cluster is ready
        run: sleep 20
      - name: Install Fluvio Local Cluster
        uses: infinyon/fluvio@master
        with:
          cluster-type: k3d
          version: latest
          rust-log: info
      - name: Check Fluvio Installation
        run: |
          fluvio version
          fluvio topic list
          fluvio topic create foobar
          sleep 3
          echo foo | fluvio produce foobar
          fluvio consume foobar -o 0 -d
          fluvio topic delete foobar;
      - uses: actions/checkout@v2
      - name: Install Rust stable
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
          target: wasm32-unknown-unknown
      - uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node }}
      - name: Cache target in proxy
        uses: actions/cache@v2.1.7
        id: cache-proxy
        with:
          path: ./fluvio-websocket-proxy/target
          key: ${{ runner.os }}-cargo-target-proxy-${{ hashFiles('fluvio-websocket-proxy/Cargo.lock') }}
      - name: build websocket proxy
        run:
          make build-fluvio-websocket-proxy
      - name: Start websocket proxy
        run:
          make run-fluvio-websocket-proxy & disown
      - name: cache target
        uses: actions/cache@v2.1.7
        id: cache
        with:
          path: ./target
          key: ${{ runner.os }}-cargo-target-${{ hashFiles('**/Cargo.lock') }}

      - name: Run tests
        uses: nick-invision/retry@v2
        with:
          timeout_minutes: 3
          max_attempts: 5
          command: make test
      - name: Run diagnostics
        if: ${{ !success() }}
        timeout-minutes: 5
        run: fluvio cluster diagnostics
      - name: Upload logs
        timeout-minutes: 5
        if: ${{ !success() }}
        uses: actions/upload-artifact@v2
        with:
          name: smoketest_${{ matrix.run }}_log
          path: diagnostics*.gz
          retention-days: 1

  done:
    name: Done
    needs: [smoke_test, check_fmt, check_yarn]
    if: github.event_name == 'push' && github.ref == 'refs/heads/staging'
    runs-on: ubuntu-latest
    steps:
      - name: Done
        run: echo Done
