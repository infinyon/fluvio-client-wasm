[package]
name = "fluvio-client-wasm"
version = "0.9.0"
authors = ["Sebastian Imlay <sebastian.imlay@gmail.com>"]
edition = "2021"

[lib]
crate-type = ["cdylib", "rlib"]

[features]
default = ["unstable"]
unstable = []

[dependencies]
wasm-bindgen = { version = "0.2.63", features = ["serde-serialize"] }
wasm-bindgen-futures = { version = "0.4.28", features = ["futures-core-03-stream"] }
fluvio = { version = "0.9.9", features = ["unstable"] }
console_log = { version = "0.2", features = ["color"] }
js-sys = "0.3.51"
web-sys = {version = "0.3.55" }
tokio-stream = "0.1.7"
tracing = "0.1.29"
fluvio-future = { version = "0.3.10", features = ["net"] }
fluvio_ws_stream_wasm = "0.7.0"
async-trait = { version = "0.1.51"}
tracing-wasm = "0.2.0"
log = "0.4"
base64 = "0.13.0"

# The `console_error_panic_hook` crate provides better debugging of panics by
# logging them with `console.error`. This is great for development, but requires
# all the `std::fmt` and `std::panicking` infrastructure, so isn't great for
# code size when deploying.
console_error_panic_hook = { version = "0.1.7" }

# `wee_alloc` is a tiny allocator for wasm that is only ~1K in code size
# compared to the default allocator's ~10K. It is slower than the default
# allocator, however.
#
# Unfortunately, `wee_alloc` requires nightly Rust when targeting wasm for now.
wee_alloc = { version = "0.4.5" }

[dev-dependencies]
wasm-bindgen-test = "0.3.28"

# https://rustwasm.github.io/docs/book/reference/code-size.html#optimizing-builds-for-code-size
[profile.release]
# Tell `rustc` to optimize for small code size.
opt-level = "z"
lto = true

[package.metadata.wasm-pack.profile.dev]
wasm-opt = ['-Os']
